(phone
 (FindAdd 0
  (FindAdd-1 nil 3653777165
   ("" (expand "member")
    (("" (skeep)
      (("" (expand "FindPhone")
        (("" (expand "AddPhone")
          (("" (expand "add") (("" (propax) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((AddPhone const-decl "B" phone nil)
    (add const-decl "(nonempty?)" sets nil)
    (FindPhone const-decl "setof[P]" phone nil)
    (member const-decl "bool" sets nil))
   shostak))
 (DelAdd 0
  (DelAdd-1 nil 3653777230
   ("" (expand "AddPhone")
    (("" (expand "DelPhoneNum")
      (("" (expand "remove")
        (("" (expand "member")
          (("" (expand "add")
            (("" (expand "member")
              (("" (skeep)
                (("" (apply-extensionality)
                  (("" (delete 2)
                    (("" (apply-extensionality)
                      (("" (delete 2)
                        (("" (iff)
                          (("" (split)
                            (("1" (flatten)
                              (("1"
                                (lift-if)
                                (("1"
                                  (assert)
                                  (("1"
                                    (split)
                                    (("1" (prop) nil nil)
                                     ("2" (prop) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (lift-if)
                                (("2"
                                  (prop)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (split 1)
                                        (("1" (assert) nil nil)
                                         ("2" (flatten) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DelPhoneNum const-decl "B" phone nil)
    (member const-decl "bool" sets nil)
    (boolean nonempty-type-decl nil booleans nil)
    (P type-decl nil phone nil) (N type-decl nil phone nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (B type-eq-decl nil phone nil)
    (setof type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (add const-decl "(nonempty?)" sets nil)
    (remove const-decl "set" sets nil)
    (AddPhone const-decl "B" phone nil))
   shostak)))

